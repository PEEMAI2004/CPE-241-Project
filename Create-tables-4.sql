-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


ALTER TABLE IF EXISTS public.beehive DROP CONSTRAINT IF EXISTS beehive_beekeeper_id_fkey;

ALTER TABLE IF EXISTS public.beehive DROP CONSTRAINT IF EXISTS beehive_beetype_id_fkey;

ALTER TABLE IF EXISTS public.beehive DROP CONSTRAINT IF EXISTS beehive_location_id_fkey;

ALTER TABLE IF EXISTS public.beehive DROP CONSTRAINT IF EXISTS beehive_plant_id_fkey;

ALTER TABLE IF EXISTS public.beekeeper DROP CONSTRAINT IF EXISTS beekeeper_location_id_fkey;

ALTER TABLE IF EXISTS public.beekeeper DROP CONSTRAINT IF EXISTS beekeeper_user_id_fkey;

ALTER TABLE IF EXISTS public.harvestlog DROP CONSTRAINT IF EXISTS harvestlog_beehive_id_fkey;

ALTER TABLE IF EXISTS public.honeystock DROP CONSTRAINT IF EXISTS honeystock_beehive_id_fkey;

ALTER TABLE IF EXISTS public.honeystock DROP CONSTRAINT IF EXISTS honeystock_harvest_id_fkey;

ALTER TABLE IF EXISTS public.orderitem DROP CONSTRAINT IF EXISTS orderitem_order_id_fkey;

ALTER TABLE IF EXISTS public.orderitem DROP CONSTRAINT IF EXISTS orderitem_stock_id_fkey;

ALTER TABLE IF EXISTS public.orderlist DROP CONSTRAINT IF EXISTS orderlist_customer_id_fkey;

ALTER TABLE IF EXISTS public.orderlist DROP CONSTRAINT IF EXISTS orderlist_user_id_fkey;

ALTER TABLE IF EXISTS public.queenbee DROP CONSTRAINT IF EXISTS queenbee_beehive_id_fkey;

ALTER TABLE IF EXISTS public.webuser DROP CONSTRAINT IF EXISTS webuser_role_id_fkey;



DROP TABLE IF EXISTS public.beehive;

CREATE TABLE IF NOT EXISTS public.beehive
(
    beehive_id serial NOT NULL,
    beehive_number character varying COLLATE pg_catalog."default" NOT NULL DEFAULT 1,
    beekeeper_id integer NOT NULL,
    beetype_id integer NOT NULL,
    plant_id integer NOT NULL,
    location_id integer NOT NULL,
    beehive_status character varying COLLATE pg_catalog."default" NOT NULL DEFAULT 'Active'::character varying,
    beehivestartdate timestamp without time zone NOT NULL,
    beehive_description text COLLATE pg_catalog."default",
    CONSTRAINT beehive_pkey PRIMARY KEY (beehive_id),
    CONSTRAINT "Beehive U" UNIQUE (beehive_id)
);

DROP TABLE IF EXISTS public.beekeeper;

CREATE TABLE IF NOT EXISTS public.beekeeper
(
    beekeeper_id serial NOT NULL,
    land_area character varying COLLATE pg_catalog."default",
    location_id integer NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT beekeeper_pkey PRIMARY KEY (beekeeper_id),
    CONSTRAINT "Beekeeper ID" UNIQUE (beekeeper_id, user_id),
    CONSTRAINT "User ID" UNIQUE (user_id)
);

DROP TABLE IF EXISTS public.beetype;

CREATE TABLE IF NOT EXISTS public.beetype
(
    beetype_id serial NOT NULL,
    beetype_name character varying COLLATE pg_catalog."default" NOT NULL,
    beetype_description text COLLATE pg_catalog."default",
    CONSTRAINT beetype_pkey PRIMARY KEY (beetype_id),
    CONSTRAINT "Beetype ID" UNIQUE (beetype_name, beetype_id),
    CONSTRAINT "Beetype Name" UNIQUE (beetype_name)
);

DROP TABLE IF EXISTS public.customer;

CREATE TABLE IF NOT EXISTS public.customer
(
    customer_id serial NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    email character varying COLLATE pg_catalog."default" NOT NULL,
    phone character varying COLLATE pg_catalog."default",
    address text COLLATE pg_catalog."default",
    createdat timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT customer_pkey PRIMARY KEY (customer_id),
    CONSTRAINT "Customer email" UNIQUE (email),
    CONSTRAINT "Customer iD" UNIQUE (email, phone, customer_id),
    CONSTRAINT "Customer phone" UNIQUE (phone)
);

DROP TABLE IF EXISTS public.geolocation;

CREATE TABLE IF NOT EXISTS public.geolocation
(
    location_id serial NOT NULL,
    province_name character varying COLLATE pg_catalog."default" NOT NULL,
    district_name character varying COLLATE pg_catalog."default" NOT NULL,
    latitude double precision NOT NULL,
    longitude double precision NOT NULL,
    location_name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT geolocation_pkey PRIMARY KEY (location_id),
    CONSTRAINT "Geolocation ID" UNIQUE (location_id, location_name),
    CONSTRAINT "Geolocation name" UNIQUE (location_name)
);

DROP TABLE IF EXISTS public.harvestlog;

CREATE TABLE IF NOT EXISTS public.harvestlog
(
    harvest_id serial NOT NULL,
    beehive_id integer NOT NULL,
    harvestdate timestamp without time zone NOT NULL,
    production numeric NOT NULL,
    production_note text COLLATE pg_catalog."default",
    CONSTRAINT harvestlog_pkey PRIMARY KEY (harvest_id),
    CONSTRAINT harvest_id UNIQUE (harvest_id)
);

DROP TABLE IF EXISTS public.honeystock;

CREATE TABLE IF NOT EXISTS public.honeystock
(
    stock_id serial NOT NULL,
    beehive_id integer NOT NULL,
    quantity numeric NOT NULL,
    harvest_id integer NOT NULL,
    stock_date timestamp without time zone NOT NULL,
    is_sold boolean NOT NULL DEFAULT false,
    description character varying COLLATE pg_catalog."default",
    CONSTRAINT honeystock_pkey PRIMARY KEY (stock_id),
    CONSTRAINT "Honey Stock U" UNIQUE (stock_id)
);

DROP TABLE IF EXISTS public.orderitem;

CREATE TABLE IF NOT EXISTS public.orderitem
(
    orderitem_id serial NOT NULL,
    order_id integer NOT NULL,
    price double precision NOT NULL,
    stock_id integer NOT NULL,
    CONSTRAINT orderitem_pkey PRIMARY KEY (orderitem_id),
    CONSTRAINT "Orderitem ID" UNIQUE (stock_id, orderitem_id),
    CONSTRAINT "Stock_id" UNIQUE (stock_id)
);

DROP TABLE IF EXISTS public.orderlist;

CREATE TABLE IF NOT EXISTS public.orderlist
(
    order_id serial NOT NULL,
    customer_id integer NOT NULL,
    order_date timestamp without time zone NOT NULL,
    status character varying COLLATE pg_catalog."default" NOT NULL DEFAULT 'Pending'::character varying,
    user_id integer NOT NULL,
    CONSTRAINT orderlist_pkey PRIMARY KEY (order_id),
    CONSTRAINT "Orderlist U" UNIQUE (order_id)
);

DROP TABLE IF EXISTS public.planttype;

CREATE TABLE IF NOT EXISTS public.planttype
(
    plant_id serial NOT NULL,
    plant_name character varying COLLATE pg_catalog."default" NOT NULL,
    anti_oxidant character varying COLLATE pg_catalog."default",
    pollen character varying COLLATE pg_catalog."default",
    plant_description text COLLATE pg_catalog."default",
    flowering_season character varying COLLATE pg_catalog."default",
    climatezone character varying COLLATE pg_catalog."default",
    CONSTRAINT planttype_pkey PRIMARY KEY (plant_id),
    CONSTRAINT "Plant" UNIQUE (plant_name),
    CONSTRAINT "Plant ID" UNIQUE (plant_id, plant_name)
);

DROP TABLE IF EXISTS public.queenbee;

CREATE TABLE IF NOT EXISTS public.queenbee
(
    queenbee_id serial NOT NULL,
    beehive_id integer NOT NULL,
    startdate timestamp without time zone NOT NULL,
    enddate timestamp without time zone NOT NULL,
    origin character varying COLLATE pg_catalog."default",
    CONSTRAINT queenbee_pkey PRIMARY KEY (queenbee_id),
    CONSTRAINT "Beehive" UNIQUE (beehive_id),
    CONSTRAINT "Queenbee ID" UNIQUE (queenbee_id, beehive_id)
);

DROP TABLE IF EXISTS public.webrole;

CREATE TABLE IF NOT EXISTS public.webrole
(
    role_id integer NOT NULL DEFAULT nextval('staffrole_role_id_seq'::regclass),
    role_name character varying COLLATE pg_catalog."default" NOT NULL,
    role_description character varying COLLATE pg_catalog."default",
    CONSTRAINT staffrole_pkey PRIMARY KEY (role_id),
    CONSTRAINT "Role" UNIQUE (role_name, role_id),
    CONSTRAINT role_name UNIQUE (role_name)
);

DROP TABLE IF EXISTS public.webuser;

CREATE TABLE IF NOT EXISTS public.webuser
(
    user_id serial NOT NULL,
    email character varying COLLATE pg_catalog."default" NOT NULL,
    role_id integer,
    createdat timestamp without time zone DEFAULT now(),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    birth_date timestamp without time zone,
    phone bigint,
    username character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT webuser_pkey PRIMARY KEY (user_id),
    CONSTRAINT email UNIQUE (email),
    CONSTRAINT phone UNIQUE (phone),
    CONSTRAINT user_id UNIQUE (user_id)
);

ALTER TABLE IF EXISTS public.beehive
    ADD CONSTRAINT beehive_beekeeper_id_fkey FOREIGN KEY (beekeeper_id)
    REFERENCES public.beekeeper (beekeeper_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.beehive
    ADD CONSTRAINT beehive_beetype_id_fkey FOREIGN KEY (beetype_id)
    REFERENCES public.beetype (beetype_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.beehive
    ADD CONSTRAINT beehive_location_id_fkey FOREIGN KEY (location_id)
    REFERENCES public.geolocation (location_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.beehive
    ADD CONSTRAINT beehive_plant_id_fkey FOREIGN KEY (plant_id)
    REFERENCES public.planttype (plant_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.beekeeper
    ADD CONSTRAINT beekeeper_location_id_fkey FOREIGN KEY (location_id)
    REFERENCES public.geolocation (location_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.beekeeper
    ADD CONSTRAINT beekeeper_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.webuser (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "User ID"
    ON public.beekeeper(user_id);


ALTER TABLE IF EXISTS public.harvestlog
    ADD CONSTRAINT harvestlog_beehive_id_fkey FOREIGN KEY (beehive_id)
    REFERENCES public.beehive (beehive_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.honeystock
    ADD CONSTRAINT honeystock_beehive_id_fkey FOREIGN KEY (beehive_id)
    REFERENCES public.beehive (beehive_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.honeystock
    ADD CONSTRAINT honeystock_harvest_id_fkey FOREIGN KEY (harvest_id)
    REFERENCES public.harvestlog (harvest_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orderitem
    ADD CONSTRAINT orderitem_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orderlist (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orderitem
    ADD CONSTRAINT orderitem_stock_id_fkey FOREIGN KEY (stock_id)
    REFERENCES public.honeystock (stock_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "Stock_id"
    ON public.orderitem(stock_id);


ALTER TABLE IF EXISTS public.orderlist
    ADD CONSTRAINT orderlist_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customer (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orderlist
    ADD CONSTRAINT orderlist_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.webuser (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.queenbee
    ADD CONSTRAINT queenbee_beehive_id_fkey FOREIGN KEY (beehive_id)
    REFERENCES public.beehive (beehive_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "Beehive"
    ON public.queenbee(beehive_id);


ALTER TABLE IF EXISTS public.webuser
    ADD CONSTRAINT webuser_role_id_fkey FOREIGN KEY (role_id)
    REFERENCES public.webrole (role_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;